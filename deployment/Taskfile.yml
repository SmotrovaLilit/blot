version: 3
vars:
  BIN_DIR: ~/.local/bin

tasks:
  install-terraform:
    desc: Install Terraform
    cmds:
      - mkdir -p {{.BIN_DIR}}
      - curl -fsSL https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_darwin_amd64.zip -o /tmp/terraform.zip
      - unzip -o /tmp/terraform.zip -d {{.BIN_DIR}}
      - rm -f /tmp/terraform.zip
      - task: _update-shell-config
      - terraform -install-autocomplete

  lint:
    desc: Format files
    cmds:
      - terraform fmt
      - terraform validate
  init:
    desc: Initialize Terraform
    cmds:
      - terraform init

  prepare-tempo:
    desc: Prepare Terraform
    # https://github.com/grafana/tempo/blob/main/example/docker-compose/local/docker-compose.yaml
    # Tempo runs as user 10001, and docker compose creates the volume as root.
    # As such, we need to chown the volume in order for Tempo to start correctly.
    cmds:
      - |
        docker run --rm  --user root --entrypoint "chown"  -v ./tempo-data:/var/tempo grafana/tempo:latest 10001:10001 /var/tempo

  apply:
    desc: Apply Terraform
    cmds:
      - task: prepare-tempo
      - terraform apply -auto-approve

  show:
    desc: Show Terraform state
    cmds:
      - terraform show

  destroy:
    desc: Destroy Terraform
    cmds:
      - terraform destroy -auto-approve

  state-list:
    desc: List Terraform state
    cmds:
      - terraform state list

  _update-shell-config:
    # Update shell config
    cmds:
      - |
        if [[ "$CI" == 1 ]];then
          echo ""
        else
          if test -f ~/.bashrc; then
            cat ~/.bashrc | grep "^PATH=\$PATH:{{.BIN_DIR}}" || echo "PATH=\$PATH:{{.BIN_DIR}}" >>~/.bashrc
            echo -e "\nReload shell: source ~/.bashrc"
          fi
          if test -f ~/.zshrc; then
            cat ~/.zshrc | grep "^PATH=\$PATH:{{.BIN_DIR}}" || echo "PATH=\$PATH:{{.BIN_DIR}}" >>~/.zshrc
            echo -e "\nReload shell: source ~/.zshrc"
          fi
        fi
