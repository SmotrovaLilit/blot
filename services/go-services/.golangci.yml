linters:
  disable-all: true
  enable:
    - govet            # Detects common issues like suspicious constructs
    - errcheck         # Checks that errors are properly handled
    - gofmt            # Ensures formatting is consistent with Go standards
    - goimports        # Formats imports and optimizes their order
    - ineffassign      # Finds unnecessary assignments
    - sloglint         # Checks that log messages are consistent and correct
    - unparam          # Checks that function parameters are used
    - godot            # Check if comments end in a period.
    - stylecheck       # Enforces code style and conventions
    - gocritic         # Provides additional suggestions for code improvement
# TODO return to this later
#    - unused           # Detects unused variables, constants, and functions
#    - revive           # Provides additional suggestions for code improvement
    - gosec
    - misspell
    - goconst
    - gocyclo
    - gosimple
    - typecheck
    - asciicheck
    - bodyclose
    - dogsled
    - exhaustive
    - gocognit
    - goconst
    - goheader
    - gosec
    - misspell
    - nakedret
    - nestif
    - noctx
    - rowserrcheck
    - sqlclosecheck
    - unconvert
    - unparam
    - whitespace

linters-settings:
  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    scope: toplevel
    # Check that each sentence ends with a period.
    # Default: true
    period: true
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: true
  goimports:
    # A comma-separated list of prefixes, which, if set, checks import paths
    # with the given prefixes are grouped after 3rd-party packages.
    # Default: ""
    local-prefixes: "blot/internal/common,blot/internal/blot"
  sloglint:
    # Enforce not mixing key-value pairs and attributes.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-mixed-arguments
    # Default: true
    no-mixed-args: false

    # Enforce not using global loggers.
    # Values:
    # - "": disabled
    # - "all": report all global loggers
    # - "default": report only the default slog logger
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global
    # Default: ""
#    no-global: "all"
    # Enforce using methods that accept a context.
    # Values:
    # - "": disabled
    # - "all": report all contextless calls
    # - "scope": report only if a context exists in the scope of the outermost function
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only
    # Default: ""
    context: "all"
    # Enforce using static values for log messages.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#static-messages
    # Default: false
#    static-msg: true
    # Enforce using constants instead of raw keys.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-raw-keys
    # Default: false
#    no-raw-keys: true
    # Enforce a single key naming convention.
    # Values: snake, kebab, camel, pascal
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-naming-convention
    # Default: ""
    key-naming-case: snake
    # Enforce not using specific keys.
    # Default: []
    forbidden-keys:
      - time
      - level
      - msg
      - message
      - source
      - stream
    # Enforce putting arguments on separate lines.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#forbidden-keys
    # Default: false
#    args-on-sep-lines: true
issues:
  exclude:
    - "composite literal uses unkeyed fields"
  exclude-rules:
    - path: _test\.go
      linters:
        - gosec
        - noctx
        - unparam
        - bodyclose
    - path: fixtures.go
      linters:
        - gosec
# Options for analysis running.
run:
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: []
#  build-tags:
#    - mytag
  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false, golangci-lint acquires file lock on start.
  # Default: false
  allow-parallel-runners: true
  # Allow multiple golangci-lint instances running, but serialize them around a lock.
  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.
  # Default: false
  allow-serial-runners: true
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17
  go: '1.23.2'
  # Number of operating system threads (`GOMAXPROCS`) that can execute golangci-lint simultaneously.
  # If it is explicitly set to 0 (i.e. not the default) then golangci-lint will automatically set the value to match Linux container CPU quota.
  # Default: the number of logical CPUs in the machine
  concurrency: 4