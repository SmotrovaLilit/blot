// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: blotservice/v1beta1/blotservice.proto

package blotservicepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameSetStatus int32

const (
	GameSetStatus_GAME_SET_STATUS_UNSPECIFIED        GameSetStatus = 0
	GameSetStatus_GAME_SET_STATUS_WAITED_FOR_PLAYERS GameSetStatus = 1
	GameSetStatus_GAME_SET_STATUS_READY_TO_START     GameSetStatus = 2
	GameSetStatus_GAME_SET_STATUS_PLAYING            GameSetStatus = 3
)

// Enum value maps for GameSetStatus.
var (
	GameSetStatus_name = map[int32]string{
		0: "GAME_SET_STATUS_UNSPECIFIED",
		1: "GAME_SET_STATUS_WAITED_FOR_PLAYERS",
		2: "GAME_SET_STATUS_READY_TO_START",
		3: "GAME_SET_STATUS_PLAYING",
	}
	GameSetStatus_value = map[string]int32{
		"GAME_SET_STATUS_UNSPECIFIED":        0,
		"GAME_SET_STATUS_WAITED_FOR_PLAYERS": 1,
		"GAME_SET_STATUS_READY_TO_START":     2,
		"GAME_SET_STATUS_PLAYING":            3,
	}
)

func (x GameSetStatus) Enum() *GameSetStatus {
	p := new(GameSetStatus)
	*p = x
	return p
}

func (x GameSetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameSetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_blotservice_v1beta1_blotservice_proto_enumTypes[0].Descriptor()
}

func (GameSetStatus) Type() protoreflect.EnumType {
	return &file_blotservice_v1beta1_blotservice_proto_enumTypes[0]
}

func (x GameSetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameSetStatus.Descriptor instead.
func (GameSetStatus) EnumDescriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{0}
}

type GameStatus int32

const (
	GameStatus_GAME_STATUS_UNSPECIFIED GameStatus = 0
	GameStatus_GAME_STATUS_BETTING     GameStatus = 1
	GameStatus_GAME_STATUS_PLAYING     GameStatus = 2
	GameStatus_GAME_STATUS_FINISHED    GameStatus = 3
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "GAME_STATUS_UNSPECIFIED",
		1: "GAME_STATUS_BETTING",
		2: "GAME_STATUS_PLAYING",
		3: "GAME_STATUS_FINISHED",
	}
	GameStatus_value = map[string]int32{
		"GAME_STATUS_UNSPECIFIED": 0,
		"GAME_STATUS_BETTING":     1,
		"GAME_STATUS_PLAYING":     2,
		"GAME_STATUS_FINISHED":    3,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_blotservice_v1beta1_blotservice_proto_enumTypes[1].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_blotservice_v1beta1_blotservice_proto_enumTypes[1]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{1}
}

type Rank int32

const (
	Rank_RANK_UNSPECIFIED Rank = 0
	Rank_RANK_ACE         Rank = 1
	Rank_RANK_SEVEN       Rank = 2
	Rank_RANK_EIGHT       Rank = 3
	Rank_RANK_NINE        Rank = 4
	Rank_RANK_TEN         Rank = 5
	Rank_RANK_JACK        Rank = 6
	Rank_RANK_QUEEN       Rank = 7
	Rank_RANK_KING        Rank = 8
)

// Enum value maps for Rank.
var (
	Rank_name = map[int32]string{
		0: "RANK_UNSPECIFIED",
		1: "RANK_ACE",
		2: "RANK_SEVEN",
		3: "RANK_EIGHT",
		4: "RANK_NINE",
		5: "RANK_TEN",
		6: "RANK_JACK",
		7: "RANK_QUEEN",
		8: "RANK_KING",
	}
	Rank_value = map[string]int32{
		"RANK_UNSPECIFIED": 0,
		"RANK_ACE":         1,
		"RANK_SEVEN":       2,
		"RANK_EIGHT":       3,
		"RANK_NINE":        4,
		"RANK_TEN":         5,
		"RANK_JACK":        6,
		"RANK_QUEEN":       7,
		"RANK_KING":        8,
	}
)

func (x Rank) Enum() *Rank {
	p := new(Rank)
	*p = x
	return p
}

func (x Rank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rank) Descriptor() protoreflect.EnumDescriptor {
	return file_blotservice_v1beta1_blotservice_proto_enumTypes[2].Descriptor()
}

func (Rank) Type() protoreflect.EnumType {
	return &file_blotservice_v1beta1_blotservice_proto_enumTypes[2]
}

func (x Rank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rank.Descriptor instead.
func (Rank) EnumDescriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{2}
}

type Suit int32

const (
	Suit_SUIT_UNSPECIFIED Suit = 0
	Suit_SUIT_HEARTS      Suit = 1
	Suit_SUIT_DIAMONDS    Suit = 2
	Suit_SUIT_CLUBS       Suit = 3
	Suit_SUIT_SPADES      Suit = 4
)

// Enum value maps for Suit.
var (
	Suit_name = map[int32]string{
		0: "SUIT_UNSPECIFIED",
		1: "SUIT_HEARTS",
		2: "SUIT_DIAMONDS",
		3: "SUIT_CLUBS",
		4: "SUIT_SPADES",
	}
	Suit_value = map[string]int32{
		"SUIT_UNSPECIFIED": 0,
		"SUIT_HEARTS":      1,
		"SUIT_DIAMONDS":    2,
		"SUIT_CLUBS":       3,
		"SUIT_SPADES":      4,
	}
)

func (x Suit) Enum() *Suit {
	p := new(Suit)
	*p = x
	return p
}

func (x Suit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Suit) Descriptor() protoreflect.EnumDescriptor {
	return file_blotservice_v1beta1_blotservice_proto_enumTypes[3].Descriptor()
}

func (Suit) Type() protoreflect.EnumType {
	return &file_blotservice_v1beta1_blotservice_proto_enumTypes[3]
}

func (x Suit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Suit.Descriptor instead.
func (Suit) EnumDescriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{3}
}

type AcceptBetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSetId string `protobuf:"bytes,1,opt,name=game_set_id,json=gameSetId,proto3" json:"game_set_id,omitempty"`
	PlayerId  string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *AcceptBetRequest) Reset() {
	*x = AcceptBetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptBetRequest) ProtoMessage() {}

func (x *AcceptBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptBetRequest.ProtoReflect.Descriptor instead.
func (*AcceptBetRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{0}
}

func (x *AcceptBetRequest) GetGameSetId() string {
	if x != nil {
		return x.GameSetId
	}
	return ""
}

func (x *AcceptBetRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type AcceptBetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptBetResponse) Reset() {
	*x = AcceptBetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptBetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptBetResponse) ProtoMessage() {}

func (x *AcceptBetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptBetResponse.ProtoReflect.Descriptor instead.
func (*AcceptBetResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{1}
}

type SetBetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSetId string `protobuf:"bytes,1,opt,name=game_set_id,json=gameSetId,proto3" json:"game_set_id,omitempty"`
	PlayerId  string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Bet       *Bet   `protobuf:"bytes,3,opt,name=bet,proto3" json:"bet,omitempty"`
}

func (x *SetBetRequest) Reset() {
	*x = SetBetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBetRequest) ProtoMessage() {}

func (x *SetBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBetRequest.ProtoReflect.Descriptor instead.
func (*SetBetRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{2}
}

func (x *SetBetRequest) GetGameSetId() string {
	if x != nil {
		return x.GameSetId
	}
	return ""
}

func (x *SetBetRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SetBetRequest) GetBet() *Bet {
	if x != nil {
		return x.Bet
	}
	return nil
}

type SetBetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBetResponse) Reset() {
	*x = SetBetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBetResponse) ProtoMessage() {}

func (x *SetBetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBetResponse.ProtoReflect.Descriptor instead.
func (*SetBetResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{3}
}

type PlayCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSetId string `protobuf:"bytes,1,opt,name=game_set_id,json=gameSetId,proto3" json:"game_set_id,omitempty"`
	PlayerId  string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Card      *Card  `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *PlayCardRequest) Reset() {
	*x = PlayCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayCardRequest) ProtoMessage() {}

func (x *PlayCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayCardRequest.ProtoReflect.Descriptor instead.
func (*PlayCardRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{4}
}

func (x *PlayCardRequest) GetGameSetId() string {
	if x != nil {
		return x.GameSetId
	}
	return ""
}

func (x *PlayCardRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayCardRequest) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type PlayCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayCardResponse) Reset() {
	*x = PlayCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayCardResponse) ProtoMessage() {}

func (x *PlayCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayCardResponse.ProtoReflect.Descriptor instead.
func (*PlayCardResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{5}
}

type StartGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSetId string `protobuf:"bytes,1,opt,name=game_set_id,json=gameSetId,proto3" json:"game_set_id,omitempty"`
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerId  string `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{6}
}

func (x *StartGameRequest) GetGameSetId() string {
	if x != nil {
		return x.GameSetId
	}
	return ""
}

func (x *StartGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *StartGameRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type StartGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{7}
}

type LeaveGameSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *LeaveGameSetRequest) Reset() {
	*x = LeaveGameSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGameSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGameSetRequest) ProtoMessage() {}

func (x *LeaveGameSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGameSetRequest.ProtoReflect.Descriptor instead.
func (*LeaveGameSetRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{8}
}

func (x *LeaveGameSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeaveGameSetRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type LeaveGameSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveGameSetResponse) Reset() {
	*x = LeaveGameSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGameSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGameSetResponse) ProtoMessage() {}

func (x *LeaveGameSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGameSetResponse.ProtoReflect.Descriptor instead.
func (*LeaveGameSetResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{9}
}

type JoinGameSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId   string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName string `protobuf:"bytes,3,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
}

func (x *JoinGameSetRequest) Reset() {
	*x = JoinGameSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameSetRequest) ProtoMessage() {}

func (x *JoinGameSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameSetRequest.ProtoReflect.Descriptor instead.
func (*JoinGameSetRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{10}
}

func (x *JoinGameSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JoinGameSetRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinGameSetRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type JoinGameSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinGameSetResponse) Reset() {
	*x = JoinGameSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameSetResponse) ProtoMessage() {}

func (x *JoinGameSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameSetResponse.ProtoReflect.Descriptor instead.
func (*JoinGameSetResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{11}
}

type CreateGameSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId   string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName string `protobuf:"bytes,3,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
}

func (x *CreateGameSetRequest) Reset() {
	*x = CreateGameSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameSetRequest) ProtoMessage() {}

func (x *CreateGameSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameSetRequest.ProtoReflect.Descriptor instead.
func (*CreateGameSetRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{12}
}

func (x *CreateGameSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateGameSetRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CreateGameSetRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type CreateGameSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGameSetResponse) Reset() {
	*x = CreateGameSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameSetResponse) ProtoMessage() {}

func (x *CreateGameSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameSetResponse.ProtoReflect.Descriptor instead.
func (*CreateGameSetResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{13}
}

type GetGameForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GetGameForPlayerRequest) Reset() {
	*x = GetGameForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameForPlayerRequest) ProtoMessage() {}

func (x *GetGameForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameForPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetGameForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{14}
}

func (x *GetGameForPlayerRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetGameForPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetGameSetForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GetGameSetForPlayerRequest) Reset() {
	*x = GetGameSetForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameSetForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSetForPlayerRequest) ProtoMessage() {}

func (x *GetGameSetForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSetForPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetGameSetForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{15}
}

func (x *GetGameSetForPlayerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGameSetForPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetGameSetForPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSet *GameSet `protobuf:"bytes,1,opt,name=game_set,json=gameSet,proto3" json:"game_set,omitempty"`
}

func (x *GetGameSetForPlayerResponse) Reset() {
	*x = GetGameSetForPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameSetForPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSetForPlayerResponse) ProtoMessage() {}

func (x *GetGameSetForPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSetForPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetGameSetForPlayerResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{16}
}

func (x *GetGameSetForPlayerResponse) GetGameSet() *GameSet {
	if x != nil {
		return x.GameSet
	}
	return nil
}

type GetGameSetsForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GetGameSetsForPlayerRequest) Reset() {
	*x = GetGameSetsForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameSetsForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSetsForPlayerRequest) ProtoMessage() {}

func (x *GetGameSetsForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSetsForPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetGameSetsForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{17}
}

func (x *GetGameSetsForPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetGameSetsForPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSets []*GameSet `protobuf:"bytes,1,rep,name=game_sets,json=gameSets,proto3" json:"game_sets,omitempty"`
}

func (x *GetGameSetsForPlayerResponse) Reset() {
	*x = GetGameSetsForPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameSetsForPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSetsForPlayerResponse) ProtoMessage() {}

func (x *GetGameSetsForPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSetsForPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetGameSetsForPlayerResponse) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{18}
}

func (x *GetGameSetsForPlayerResponse) GetGameSets() []*GameSet {
	if x != nil {
		return x.GameSets
	}
	return nil
}

type GameSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Return players how they sit at the table (clockwise)
	Players []*Player     `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	Status  GameSetStatus `protobuf:"varint,4,opt,name=status,proto3,enum=blotservice.v1beta1.GameSetStatus" json:"status,omitempty"`
	Game    *Game         `protobuf:"bytes,5,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *GameSet) Reset() {
	*x = GameSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSet) ProtoMessage() {}

func (x *GameSet) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSet.ProtoReflect.Descriptor instead.
func (*GameSet) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{19}
}

func (x *GameSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameSet) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GameSet) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameSet) GetStatus() GameSetStatus {
	if x != nil {
		return x.Status
	}
	return GameSetStatus_GAME_SET_STATUS_UNSPECIFIED
}

func (x *GameSet) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status              GameStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=blotservice.v1beta1.GameStatus" json:"status,omitempty"`
	Rounds              []*Round             `protobuf:"bytes,3,rep,name=rounds,proto3" json:"rounds,omitempty"`
	Bet                 *Bet                 `protobuf:"bytes,4,opt,name=bet,proto3,oneof" json:"bet,omitempty"`
	Team1               *Team                `protobuf:"bytes,5,opt,name=team1,proto3" json:"team1,omitempty"`
	Team2               *Team                `protobuf:"bytes,6,opt,name=team2,proto3" json:"team2,omitempty"`
	PlayerStates        []*PlayerStateInGame `protobuf:"bytes,7,rep,name=player_states,json=playerStates,proto3" json:"player_states,omitempty"`
	CurrentTurnPlayerId string               `protobuf:"bytes,8,opt,name=current_turn_player_id,json=currentTurnPlayerId,proto3" json:"current_turn_player_id,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{20}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (x *Game) GetRounds() []*Round {
	if x != nil {
		return x.Rounds
	}
	return nil
}

func (x *Game) GetBet() *Bet {
	if x != nil {
		return x.Bet
	}
	return nil
}

func (x *Game) GetTeam1() *Team {
	if x != nil {
		return x.Team1
	}
	return nil
}

func (x *Game) GetTeam2() *Team {
	if x != nil {
		return x.Team2
	}
	return nil
}

func (x *Game) GetPlayerStates() []*PlayerStateInGame {
	if x != nil {
		return x.PlayerStates
	}
	return nil
}

func (x *Game) GetCurrentTurnPlayerId() string {
	if x != nil {
		return x.CurrentTurnPlayerId
	}
	return ""
}

type Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trump  Suit  `protobuf:"varint,1,opt,name=trump,proto3,enum=blotservice.v1beta1.Suit" json:"trump,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Bet) Reset() {
	*x = Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bet) ProtoMessage() {}

func (x *Bet) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bet.ProtoReflect.Descriptor instead.
func (*Bet) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{21}
}

func (x *Bet) GetTrump() Suit {
	if x != nil {
		return x.Trump
	}
	return Suit_SUIT_UNSPECIFIED
}

func (x *Bet) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Player1 string `protobuf:"bytes,2,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2 string `protobuf:"bytes,3,opt,name=player2,proto3" json:"player2,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{22}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetPlayer1() string {
	if x != nil {
		return x.Player1
	}
	return ""
}

func (x *Team) GetPlayer2() string {
	if x != nil {
		return x.Player2
	}
	return ""
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{23}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PlayerStateInGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HandCards []*Card `protobuf:"bytes,4,rep,name=hand_cards,json=handCards,proto3" json:"hand_cards,omitempty"`
}

func (x *PlayerStateInGame) Reset() {
	*x = PlayerStateInGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStateInGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStateInGame) ProtoMessage() {}

func (x *PlayerStateInGame) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStateInGame.ProtoReflect.Descriptor instead.
func (*PlayerStateInGame) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{24}
}

func (x *PlayerStateInGame) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerStateInGame) GetHandCards() []*Card {
	if x != nil {
		return x.HandCards
	}
	return nil
}

type Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     int32         `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	TableCards []*PlayedCard `protobuf:"bytes,2,rep,name=table_cards,json=tableCards,proto3" json:"table_cards,omitempty"`
	WinnerId   string        `protobuf:"bytes,3,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	Score      int32         `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Round) Reset() {
	*x = Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round.ProtoReflect.Descriptor instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{25}
}

func (x *Round) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Round) GetTableCards() []*PlayedCard {
	if x != nil {
		return x.TableCards
	}
	return nil
}

func (x *Round) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *Round) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type PlayedCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Card     *Card  `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *PlayedCard) Reset() {
	*x = PlayedCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayedCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayedCard) ProtoMessage() {}

func (x *PlayedCard) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayedCard.ProtoReflect.Descriptor instead.
func (*PlayedCard) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{26}
}

func (x *PlayedCard) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayedCard) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank Rank `protobuf:"varint,1,opt,name=rank,proto3,enum=blotservice.v1beta1.Rank" json:"rank,omitempty"`
	Suit Suit `protobuf:"varint,2,opt,name=suit,proto3,enum=blotservice.v1beta1.Suit" json:"suit,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_blotservice_v1beta1_blotservice_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_blotservice_v1beta1_blotservice_proto_rawDescGZIP(), []int{27}
}

func (x *Card) GetRank() Rank {
	if x != nil {
		return x.Rank
	}
	return Rank_RANK_UNSPECIFIED
}

func (x *Card) GetSuit() Suit {
	if x != nil {
		return x.Suit
	}
	return Suit_SUIT_UNSPECIFIED
}

var File_blotservice_v1beta1_blotservice_proto protoreflect.FileDescriptor

var file_blotservice_v1beta1_blotservice_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0x4f, 0x0a, 0x10,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a,
	0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x78, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x42, 0x65, 0x74, 0x52, 0x03, 0x62, 0x65, 0x74, 0x22, 0x10, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x12, 0x0a,
	0x10, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x68, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x42, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x12,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x22, 0xd6, 0x01, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x04, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x06,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x2f, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x42, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x62, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61,
	0x6d, 0x31, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x32, 0x12, 0x4b, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6c, 0x6f,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x65, 0x74, 0x22, 0x4e, 0x0a,
	0x03, 0x42, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x75, 0x69, 0x74, 0x52, 0x05,
	0x74, 0x72, 0x75, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a,
	0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x22, 0x2c, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a,
	0x68, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x68, 0x61, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x58, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x64, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x2d, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2d,
	0x0a, 0x04, 0x73, 0x75, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62,
	0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x53, 0x75, 0x69, 0x74, 0x52, 0x04, 0x73, 0x75, 0x69, 0x74, 0x2a, 0x99, 0x01,
	0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x1b, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x2a, 0x75, 0x0a, 0x0a, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41, 0x4d, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x42, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03,
	0x2a, 0x95, 0x01, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a,
	0x09, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x4e, 0x49, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x54, 0x45, 0x4e, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x41,
	0x4e, 0x4b, 0x5f, 0x4a, 0x41, 0x43, 0x4b, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x51, 0x55, 0x45, 0x45, 0x4e, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x2a, 0x61, 0x0a, 0x04, 0x53, 0x75, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x55, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x55, 0x49, 0x54, 0x5f, 0x48,
	0x45, 0x41, 0x52, 0x54, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x55, 0x49, 0x54, 0x5f,
	0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55,
	0x49, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x42, 0x53, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x55,
	0x49, 0x54, 0x5f, 0x53, 0x50, 0x41, 0x44, 0x45, 0x53, 0x10, 0x04, 0x32, 0x97, 0x07, 0x0a, 0x0b,
	0x42, 0x6c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x62,
	0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x27, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x6c,
	0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x42, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x42, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x30, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x23, 0x5a, 0x21, 0x62, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x62, 0x6c, 0x6f,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_blotservice_v1beta1_blotservice_proto_rawDescOnce sync.Once
	file_blotservice_v1beta1_blotservice_proto_rawDescData = file_blotservice_v1beta1_blotservice_proto_rawDesc
)

func file_blotservice_v1beta1_blotservice_proto_rawDescGZIP() []byte {
	file_blotservice_v1beta1_blotservice_proto_rawDescOnce.Do(func() {
		file_blotservice_v1beta1_blotservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_blotservice_v1beta1_blotservice_proto_rawDescData)
	})
	return file_blotservice_v1beta1_blotservice_proto_rawDescData
}

var file_blotservice_v1beta1_blotservice_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_blotservice_v1beta1_blotservice_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_blotservice_v1beta1_blotservice_proto_goTypes = []any{
	(GameSetStatus)(0),                   // 0: blotservice.v1beta1.GameSetStatus
	(GameStatus)(0),                      // 1: blotservice.v1beta1.GameStatus
	(Rank)(0),                            // 2: blotservice.v1beta1.Rank
	(Suit)(0),                            // 3: blotservice.v1beta1.Suit
	(*AcceptBetRequest)(nil),             // 4: blotservice.v1beta1.AcceptBetRequest
	(*AcceptBetResponse)(nil),            // 5: blotservice.v1beta1.AcceptBetResponse
	(*SetBetRequest)(nil),                // 6: blotservice.v1beta1.SetBetRequest
	(*SetBetResponse)(nil),               // 7: blotservice.v1beta1.SetBetResponse
	(*PlayCardRequest)(nil),              // 8: blotservice.v1beta1.PlayCardRequest
	(*PlayCardResponse)(nil),             // 9: blotservice.v1beta1.PlayCardResponse
	(*StartGameRequest)(nil),             // 10: blotservice.v1beta1.StartGameRequest
	(*StartGameResponse)(nil),            // 11: blotservice.v1beta1.StartGameResponse
	(*LeaveGameSetRequest)(nil),          // 12: blotservice.v1beta1.LeaveGameSetRequest
	(*LeaveGameSetResponse)(nil),         // 13: blotservice.v1beta1.LeaveGameSetResponse
	(*JoinGameSetRequest)(nil),           // 14: blotservice.v1beta1.JoinGameSetRequest
	(*JoinGameSetResponse)(nil),          // 15: blotservice.v1beta1.JoinGameSetResponse
	(*CreateGameSetRequest)(nil),         // 16: blotservice.v1beta1.CreateGameSetRequest
	(*CreateGameSetResponse)(nil),        // 17: blotservice.v1beta1.CreateGameSetResponse
	(*GetGameForPlayerRequest)(nil),      // 18: blotservice.v1beta1.GetGameForPlayerRequest
	(*GetGameSetForPlayerRequest)(nil),   // 19: blotservice.v1beta1.GetGameSetForPlayerRequest
	(*GetGameSetForPlayerResponse)(nil),  // 20: blotservice.v1beta1.GetGameSetForPlayerResponse
	(*GetGameSetsForPlayerRequest)(nil),  // 21: blotservice.v1beta1.GetGameSetsForPlayerRequest
	(*GetGameSetsForPlayerResponse)(nil), // 22: blotservice.v1beta1.GetGameSetsForPlayerResponse
	(*GameSet)(nil),                      // 23: blotservice.v1beta1.GameSet
	(*Game)(nil),                         // 24: blotservice.v1beta1.Game
	(*Bet)(nil),                          // 25: blotservice.v1beta1.Bet
	(*Team)(nil),                         // 26: blotservice.v1beta1.Team
	(*Player)(nil),                       // 27: blotservice.v1beta1.Player
	(*PlayerStateInGame)(nil),            // 28: blotservice.v1beta1.PlayerStateInGame
	(*Round)(nil),                        // 29: blotservice.v1beta1.Round
	(*PlayedCard)(nil),                   // 30: blotservice.v1beta1.PlayedCard
	(*Card)(nil),                         // 31: blotservice.v1beta1.Card
}
var file_blotservice_v1beta1_blotservice_proto_depIdxs = []int32{
	25, // 0: blotservice.v1beta1.SetBetRequest.bet:type_name -> blotservice.v1beta1.Bet
	31, // 1: blotservice.v1beta1.PlayCardRequest.card:type_name -> blotservice.v1beta1.Card
	23, // 2: blotservice.v1beta1.GetGameSetForPlayerResponse.game_set:type_name -> blotservice.v1beta1.GameSet
	23, // 3: blotservice.v1beta1.GetGameSetsForPlayerResponse.game_sets:type_name -> blotservice.v1beta1.GameSet
	27, // 4: blotservice.v1beta1.GameSet.players:type_name -> blotservice.v1beta1.Player
	0,  // 5: blotservice.v1beta1.GameSet.status:type_name -> blotservice.v1beta1.GameSetStatus
	24, // 6: blotservice.v1beta1.GameSet.game:type_name -> blotservice.v1beta1.Game
	1,  // 7: blotservice.v1beta1.Game.status:type_name -> blotservice.v1beta1.GameStatus
	29, // 8: blotservice.v1beta1.Game.rounds:type_name -> blotservice.v1beta1.Round
	25, // 9: blotservice.v1beta1.Game.bet:type_name -> blotservice.v1beta1.Bet
	26, // 10: blotservice.v1beta1.Game.team1:type_name -> blotservice.v1beta1.Team
	26, // 11: blotservice.v1beta1.Game.team2:type_name -> blotservice.v1beta1.Team
	28, // 12: blotservice.v1beta1.Game.player_states:type_name -> blotservice.v1beta1.PlayerStateInGame
	3,  // 13: blotservice.v1beta1.Bet.trump:type_name -> blotservice.v1beta1.Suit
	31, // 14: blotservice.v1beta1.PlayerStateInGame.hand_cards:type_name -> blotservice.v1beta1.Card
	30, // 15: blotservice.v1beta1.Round.table_cards:type_name -> blotservice.v1beta1.PlayedCard
	31, // 16: blotservice.v1beta1.PlayedCard.card:type_name -> blotservice.v1beta1.Card
	2,  // 17: blotservice.v1beta1.Card.rank:type_name -> blotservice.v1beta1.Rank
	3,  // 18: blotservice.v1beta1.Card.suit:type_name -> blotservice.v1beta1.Suit
	16, // 19: blotservice.v1beta1.BlotService.CreateGameSet:input_type -> blotservice.v1beta1.CreateGameSetRequest
	14, // 20: blotservice.v1beta1.BlotService.JoinGameSet:input_type -> blotservice.v1beta1.JoinGameSetRequest
	12, // 21: blotservice.v1beta1.BlotService.LeaveGameSet:input_type -> blotservice.v1beta1.LeaveGameSetRequest
	10, // 22: blotservice.v1beta1.BlotService.StartGame:input_type -> blotservice.v1beta1.StartGameRequest
	6,  // 23: blotservice.v1beta1.BlotService.SetBet:input_type -> blotservice.v1beta1.SetBetRequest
	4,  // 24: blotservice.v1beta1.BlotService.AcceptBet:input_type -> blotservice.v1beta1.AcceptBetRequest
	8,  // 25: blotservice.v1beta1.BlotService.PlayCard:input_type -> blotservice.v1beta1.PlayCardRequest
	19, // 26: blotservice.v1beta1.BlotService.GetGameSetForPlayer:input_type -> blotservice.v1beta1.GetGameSetForPlayerRequest
	21, // 27: blotservice.v1beta1.BlotService.GetGameSetsForPlayer:input_type -> blotservice.v1beta1.GetGameSetsForPlayerRequest
	17, // 28: blotservice.v1beta1.BlotService.CreateGameSet:output_type -> blotservice.v1beta1.CreateGameSetResponse
	15, // 29: blotservice.v1beta1.BlotService.JoinGameSet:output_type -> blotservice.v1beta1.JoinGameSetResponse
	13, // 30: blotservice.v1beta1.BlotService.LeaveGameSet:output_type -> blotservice.v1beta1.LeaveGameSetResponse
	11, // 31: blotservice.v1beta1.BlotService.StartGame:output_type -> blotservice.v1beta1.StartGameResponse
	7,  // 32: blotservice.v1beta1.BlotService.SetBet:output_type -> blotservice.v1beta1.SetBetResponse
	5,  // 33: blotservice.v1beta1.BlotService.AcceptBet:output_type -> blotservice.v1beta1.AcceptBetResponse
	9,  // 34: blotservice.v1beta1.BlotService.PlayCard:output_type -> blotservice.v1beta1.PlayCardResponse
	20, // 35: blotservice.v1beta1.BlotService.GetGameSetForPlayer:output_type -> blotservice.v1beta1.GetGameSetForPlayerResponse
	22, // 36: blotservice.v1beta1.BlotService.GetGameSetsForPlayer:output_type -> blotservice.v1beta1.GetGameSetsForPlayerResponse
	28, // [28:37] is the sub-list for method output_type
	19, // [19:28] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_blotservice_v1beta1_blotservice_proto_init() }
func file_blotservice_v1beta1_blotservice_proto_init() {
	if File_blotservice_v1beta1_blotservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blotservice_v1beta1_blotservice_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptBetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptBetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SetBetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SetBetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PlayCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PlayCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StartGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*StartGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveGameSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveGameSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*JoinGameSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*JoinGameSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGameSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGameSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetGameForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetGameSetForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetGameSetForPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetGameSetsForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetGameSetsForPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GameSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerStateInGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PlayedCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blotservice_v1beta1_blotservice_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blotservice_v1beta1_blotservice_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blotservice_v1beta1_blotservice_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blotservice_v1beta1_blotservice_proto_goTypes,
		DependencyIndexes: file_blotservice_v1beta1_blotservice_proto_depIdxs,
		EnumInfos:         file_blotservice_v1beta1_blotservice_proto_enumTypes,
		MessageInfos:      file_blotservice_v1beta1_blotservice_proto_msgTypes,
	}.Build()
	File_blotservice_v1beta1_blotservice_proto = out.File
	file_blotservice_v1beta1_blotservice_proto_rawDesc = nil
	file_blotservice_v1beta1_blotservice_proto_goTypes = nil
	file_blotservice_v1beta1_blotservice_proto_depIdxs = nil
}
